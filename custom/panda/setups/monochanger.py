#  -*- coding: utf-8 -*-

description = 'TEST setup for new version of Monochanger on PANDA (now with PLC)'

includes = ['system']

group = 'lowlevel' # hide it for people not knowing what they are doing....

# below devices and setting need to keep in sync with the PLC-code!
devices = dict(
    # single point of failure
    modbus         = device('panda.monochanger.ModBusThingy',
                            description = 'Single connecting point to the new mono changer',
                            host = 'wechsler.panda.frm2',
                           ),
    # sensing inputs...
    lift_sw        = device('panda.monochanger.FullDiscreteInput',
                            description = 'Lift Position as sensed by the positional switches',
                            bus = 'modbus',
                            addr = 0x4020,
                           ),
    magazine_sw    = device('panda.monochanger.FullDiscreteInput',
                            description = 'Magazin Position as sensed by the positional switches',
                            bus = 'modbus',
                            addr = 0x4022,
                           ),
    liftclamp_sw   = device('panda.monochanger.FullDiscreteInput',
                            description = 'Lift-clamp position as sensed by the positional switches',
                            bus = 'modbus',
                            addr = 0x4024,
                           ),
    magazineclamp_sw   = device('panda.monochanger.FullDiscreteInput',
                                description = 'Magazin-clamp position as sensed by the positional switches',
                                bus = 'modbus',
                                addr = 0x4026,
                               ),
    occupied_sw    = device('panda.monochanger.FullDiscreteInput',
                            description = 'Occupancy switches of the magazin',
                            bus = 'modbus',
                            addr = 0x4028,
                           ),
    free_full      = device('panda.monochanger.FullDiscreteInput',
                            description = 'Which magazin slot is free/used',
                            bus = 'modbus',
                            addr = 0x402a,
                           ),
    analog1        = device('panda.monochanger.FullDiscreteInput',
                            description = '16-Bit A/D value 1 (sense)',
                            bus = 'modbus',
                            addr = 0x402c,
                           ),
    analog2        = device('panda.monochanger.FullDiscreteInput',
                            description = '16-Bit A/D value 2 (ref)',
                            bus = 'modbus',
                            addr = 0x402e,
                           ),
    spare_inputs   = device('panda.monochanger.FullDiscreteInput',
                            description = 'Spare inputs as bit-patterns',
                            bus = 'modbus',
                            addr = 0x4030,
                           ),
    # now the output devices...
    # output devices will only do anything if enable_word is set to the right code word....
    #
    lift           = device('panda.monochanger.FullDiscreteOutput',
                            description = 'Lift of Monochanger (MOVEABLE!!!)',
                            bus = 'modbus',
                            addr = 0x4032,
                           ),
    magazine       = device('panda.monochanger.FullDiscreteOutput',
                            description = 'Magazin of Monochanger (MOVEABLE!!!)',
                            bus = 'modbus',
                            addr = 0x4035,
                           ),
    liftclamp      = device('panda.monochanger.FullDiscreteOutput',
                            description = 'Liftclamp of Monochanger (MOVEABLE!!!)',
                            bus = 'modbus',
                            addr = 0x4038,
                           ),
    magazineclamp  = device('panda.monochanger.FullDiscreteOutput',
                            description = 'Magazinclamp of Monochanger (MOVEABLE!!!)',
                            bus = 'modbus',
                            addr = 0x403b,
                           ),
    tableclamp     = device('panda.monochanger.FullDiscreteOutput',
                            description = 'Tableclamp of Monochanger (MOVEABLE!!!)',
                            bus = 'modbus',
                            addr = 0x403e,
                           ),
    inhibit_relay  = device('panda.monochanger.FullDiscreteOutput',
                            description = 'Inhibit_relay of Monochanger (MOVEABLE!!!)',
                            bus = 'modbus',
                            addr = 0x4041,
                           ),
    # spare outputs work always
    spare_Outputs  = device('panda.monochanger.FullDiscreteOutput',
                            description = 'Spare Outputs as bit-patterns',
                            bus = 'modbus',
                            addr = 0x4044,
                           ),
    # extra stuff
    liftpos_analog = device('panda.monochanger.SimpleAnalogInput',
                            description = 'Lift position as sensed by the A/D-converters',
                            bus = 'modbus',
                            addr = 0x4047,
                           ),
    enable_word    = device('panda.monochanger.JustAWord',
                            description = 'enable code word',
                            bus = 'modbus',
                            addr = 0x4049,
                            fmtstr='0x%04x',
                           ),
    cycle_counter  = device('panda.monochanger.SimpleDiscreteInput',
                            description = 'Cycle counter of the PLC',
                            bus = 'modbus',
                            addr = 0x404a,
                            fmtstr='0x%04x',
                           ),
)

startupcode = """
"""