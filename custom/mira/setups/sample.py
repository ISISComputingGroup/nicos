description = 'sample table'
group = 'lowlevel'

includes = ['alias_sth']

tango_base = 'tango://mira1.mira.frm2:10000/mira/'

devices = dict(
    co_stt   = device('devices.tango.Sensor',
                      lowlevel = True,
                      tangodevice = tango_base + 'sample/phi_enc',
                      unit = 'deg',
                     ),
    mo_stt   = device('devices.tango.Motor',
                      lowlevel = True,
                      tangodevice = tango_base + 'sample/phi_mot',
                      unit = 'deg',
                      precision = 0.002,
                     ),
    stt      = device('mira.axis.HoveringAxis',
                      description = 'sample two-theta angle',
                      abslimits = (-120, 120),
                      motor = 'mo_stt',
                      coder = 'co_stt',
                      obs = [],
                      startdelay = 1,
                      stopdelay = 2,
                      switch = 'air_sample',
                      switchvalues = (0, 1),
                      fmtstr = '%.3f',
                      precision = 0.002,
                     ),

    air_mono   = device('devices.tango.DigitalOutput',
                        tangodevice = tango_base + 'air/mono',
                        lowlevel = True,
                       ),

    air_sample = device('mira.refcountio.RefcountDigitalOutput',
                        tangodevice = tango_base + 'air/sample',
                        lowlevel = True,
                       ),

    air_ana    = device('mira.refcountio.RefcountDigitalOutput',
                        tangodevice = tango_base + 'air/det',
                        lowlevel = True,
                       ),

    co_sth_st = device('devices.tango.Sensor',
                      lowlevel = True,
                      tangodevice = tango_base + 'sample/om_enc',
                      unit = 'deg',
                     ),
    mo_sth_st = device('devices.tango.Motor',
                      lowlevel = True,
                      tangodevice = tango_base + 'sample/om_mot',
                      unit = 'deg',
                      precision = 0.001,
                     ),
    sth_st   = device('devices.generic.Axis',
                      description = 'sample theta angle',
                      motor = 'mo_sth_st',
                      coder = 'co_sth_st',
                      obs = [],
                      fmtstr = '%.3f',
                      precision = 0.001,
                     ),

    co_stz   = device('devices.tango.Sensor',
                      lowlevel = True,
                      tangodevice = tango_base + 'sample/stz_enc',
                      unit = 'mm',
                     ),
    mo_stz   = device('devices.tango.Motor',
                      lowlevel = True,
                      tangodevice = tango_base + 'sample/stz_mot',
                      unit = 'mm',
                      precision = 0.1,
                     ),
    stz      = device('devices.generic.Axis',
                      description = 'sample translation in vertical direction',
                      motor = 'mo_stz',
                      coder = 'co_stz',
                      obs = [],
                      fmtstr = '%.2f',
                      precision = 0.1,
                     ),

    co_stx   = device('devices.tango.Sensor',
                      lowlevel = True,
                      tangodevice = tango_base + 'sample/stx_enc',
                      unit = 'mm',
                     ),
    mo_stx   = device('devices.tango.Motor',
                      lowlevel = True,
                      tangodevice = tango_base + 'sample/stx_mot',
                      unit = 'mm',
                      precision = 0.01,
                     ),
    stx      = device('devices.generic.Axis',
                      description = 'sample translation along the beam (for sth_st=0)',
                      motor = 'mo_stx',
                      coder = 'co_stx',
                      obs = [],
                      fmtstr = '%.2f',
                      precision = 0.01,
                     ),

    co_sty   = device('devices.tango.Sensor',
                      lowlevel = True,
                      tangodevice = tango_base + 'sample/sty_enc',
                      unit = 'mm',
                     ),
    mo_sty   = device('devices.tango.Motor',
                      lowlevel = True,
                      tangodevice = tango_base + 'sample/sty_mot',
                      unit = 'mm',
                      precision = 0.01,
                     ),
    sty      = device('devices.generic.Axis',
                      description = 'sample translation horizontally perpendicular to the beam (for sth_st=0)',
                      motor = 'mo_sty',
                      coder = 'co_sty',
                      obs = [],
                      fmtstr = '%.2f',
                      precision = 0.01,
                     ),

    co_sgx   = device('devices.tango.Sensor',
                      lowlevel = True,
                      tangodevice = tango_base + 'sample/sgx_enc',
                      unit = 'deg',
                     ),
    mo_sgx   = device('devices.tango.Motor',
                      lowlevel = True,
                      tangodevice = tango_base + 'sample/sgx_mot',
                      unit = 'deg',
                      precision = 0.01,
                     ),
    sgx      = device('devices.generic.Axis',
                      description = 'sample tilt around beam axis (for sth_st=0)',
                      motor = 'mo_sgx',
                      coder = 'co_sgx',
                      obs = [],
                      fmtstr = '%.2f',
                      precision = 0.01,
                     ),

    co_sgy   = device('devices.tango.Sensor',
                      lowlevel = True,
                      tangodevice = tango_base + 'sample/sgy_enc',
                      unit = 'deg',
                     ),
    mo_sgy   = device('devices.tango.Motor',
                      lowlevel = True,
                      tangodevice = tango_base + 'sample/sgy_mot',
                      unit = 'deg',
                      precision = 0.01,
                     ),
    sgy      = device('devices.generic.Axis',
                      description = 'sample tilt orthogonal to beam axis (for sth_st=0)',
                      motor = 'mo_sgy',
                      coder = 'co_sgy',
                      obs = [],
                      fmtstr = '%.2f',
                      precision = 0.01,
                     ),
)

alias_config = {
    'sth': {'sth_st': 0},
}
