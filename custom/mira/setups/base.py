description = 'base setup for all instrument configurations'
group = 'lowlevel'

includes = ['system', 'slits', 'sample', 'nl6', 'reactor']

devices = dict(
    MonoToni  = device('devices.vendor.toni.ModBus',
                       tacodevice = '//mirasrv/mira/rs232/monotoni',
                       lowlevel = True,
                      ),

# will be done using BeamElement once both limit switches work...
    atten1    = device('devices.vendor.toni.Valve',
                       bus = 'MonoToni',
                       addr = 241,
                       channel = 6,
                       states = ['out', 'in'],
#                       lowlevel = True,
                      ),
#    atten1_i  = device('mira.beckhoff.DigitalInput',
#                       tangodevice = 'tango://mira1.mira.frm2:10000/mira/beckhoff/beckhoff2',
#                       offset = 1,
#                       lowlevel = True,
#                      ),
#    atten1_o  = device('mira.beckhoff.DigitalInput',
#                       tangodevice = 'tango://mira1.mira.frm2:10000/mira/beckhoff/beckhoff2',
#                       offset = 0,
#                       lowlevel = True,
#                      ),
#    atten1    = device('mira.switches.BeamElement',
#                       description = 'attenuator 1 (factor 6 at 4.5 Ang) in the beam?',
#                       valve = 'atten1_v',
#                       switch_in = 'atten1_i',
#                       switch_out = 'atten1_o',
#                       warnlimits = ('out', 'out'),
#                      ),

    atten2_v  = device('devices.vendor.toni.Valve',
                       bus = 'MonoToni',
                       addr = 241,
                       channel = 7,
                       states = ['out', 'in'],
                       lowlevel = True,
                      ),
    atten2_i  = device('mira.beckhoff.DigitalInput',
                       tangodevice = 'tango://mira1.mira.frm2:10000/mira/beckhoff/beckhoff2',
                       offset = 3,
                       lowlevel = True,
                      ),
    atten2_o  = device('mira.beckhoff.DigitalInput',
                       tangodevice = 'tango://mira1.mira.frm2:10000/mira/beckhoff/beckhoff2',
                       offset = 2,
                       lowlevel = True,
                      ),
    atten2    = device('mira.switches.BeamElement',
                       description = 'attenuator 2 (factor 36 at 4.5 Ang) in the beam?',
                       valve = 'atten2_v',
                       switch_in = 'atten2_i',
                       switch_out = 'atten2_o',
                       warnlimits = ('out', 'out'),
                      ),

    lamfilter = device('devices.vendor.toni.Valve',
                       description = 'beryllium filter in the beam?',
                       bus = 'MonoToni',
                       addr = 241,
                       channel = 4,
                       states = ['in', 'out'],
                       warnlimits = ('in', 'in'),
                      ),
    FOL       = device('devices.vendor.toni.Valve',
                       description = 'frame overlap mirror in the beam?',
                       lowlevel = True,   # not used currently
                       bus = 'MonoToni',
                       addr = 241,
                       channel = 0,
                       states = ['out', 'in'],
                      ),
    flip1     = device('devices.vendor.toni.Valve',
                       description = 'flipper in MIRA-1 shielding in the beam?',
                       lowlevel = True,  # not used currently
                       bus = 'MonoToni',
                       addr = 241,
                       channel = 3,
                       states = ['out', 'in'],
                      ),
    flip2     = device('devices.vendor.toni.Valve',
                       description = 'flipper and guide field in MIRA-2 shielding table in the beam?',
                       bus = 'MonoToni',
                       addr = 241,
                       channel = 3,
                       states = ['in', 'out'],
                      ),
    ms2pos    = device('devices.vendor.toni.Valve',
                       description = 'slit after MIRA-2 shielding exit in the beam?',
                       bus = 'MonoToni',
                       addr = 241,
                       channel = 5,
                       states = ['out', 'in'],
                       warnlimits = ('in', 'in'),
                      ),

    Shutter   = device('mira.shutter.Shutter',
                       description = 'MIRA shutter position',
                       tangodevice = 'tango://mira1.mira.frm2:10000/mira/beckhoff/beckhoff2',
                       openoffset = 8,
                       closeoffset = 9,
                       switchoffset = 0,
                       warnlimits = ('open', 'open'),
                       unit = '',
                      ),

    PSDGas    = device('mira.beckhoff.NamedDigitalInput',
                       description = 'sensor to indicate low pressure in CO2 gas of CASCADE',
                       mapping = {'empty': 0, 'okay': 1},
                       warnlimits = ('okay', 'okay'),
                       pollinterval = 10,
                       maxage = 30,
                       tangodevice = 'tango://mira1.mira.frm2:10000/mira/beckhoff/beckhoff2',
                       offset = 6,
                      ),

    Cooling   = device('mira.beckhoff.NamedDigitalInput',
                       description = 'sensor for MIRA cooling water filling level',
                       mapping = {'refill': 0, 'okay': 1},
                       warnlimits = ('okay', 'okay'),
                       pollinterval = 10,
                       maxage = 30,
                       tangodevice = 'tango://mira1.mira.frm2:10000/mira/beckhoff/beckhoff2',
                       offset = 7,
                      ),
    CoolTemp  = device('devices.taco.AnalogInput',
                       description = 'temperature of MIRA cooling water',
                       tacodevice = '//mirasrv/mira/i7000/coolingtemp',
                       warnlimits = (10, 30),
                       pollinterval = 10,
                       maxage = 30,
                      ),
)
