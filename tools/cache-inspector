#!/usr/bin/python
#  -*- coding: utf-8 -*-
# *****************************************************************************
# NICOS, the Networked Instrument Control System of the FRM-II
# Copyright (c) 2009-2014 by the NICOS contributors (see AUTHORS)
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# Module authors:
#   Pascal Neubert <pascal.neubert@frm2.tum.de>
#
# *****************************************************************************

import sys, optparse
from os import path

from PyQt4.QtGui import QApplication
try:
    from nicos.core.sessions.simple import SingleDeviceSession
except ImportError:
    thisfile = path.abspath(__file__)
    sys.path.insert(0, path.normpath(path.join(path.dirname(thisfile), '..')))
    from nicos.core.sessions.simple import SingleDeviceSession

from cacheinspector.cacheinspector import CacheInspector

def main(argv=None):
    if not argv:
        argv = sys.argv

    usage =''' Usage: %prog [options] [key ...]
    '''

    parser = optparse.OptionParser(usage=usage)
    parser.add_option('-c', '--cache', dest='cache', action='store',
                      help='CACHE server:port, defaults to localhost:14869',
                      default='localhost')
    parser.add_option('-p', '--prefix', dest='prefix', action='store',
                      help='PREFIX is the key prefix; it will be added in front '
                      'of the key, defaults to \'nicos/\'', default='nicos')
    opts, args = parser.parse_args()

    SingleDeviceSession.run('cacheInspector', CacheInspector,
                            {
                                'cache': opts.cache, 'prefix': opts.prefix,
                            },
                            pidfile=False)

if __name__ == '__main__':
    sys.exit(main(sys.argv))
