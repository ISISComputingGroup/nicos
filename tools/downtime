#!/usr/bin/env python

import sys
from os import path
import logging
import argparse

sys.path.insert(0, path.dirname(path.dirname(path.realpath(__file__))))

from nicos.guisupport.qt import QApplication, QMainWindow
from nicos.clients.gui.tools.downtime import DownTimeTool
from nicos.utils.loggers import ColoredConsoleHandler, \
    NicosLogger, initLoggers


parser = argparse.ArgumentParser()
parser.add_argument('-r', '--receiver', dest='receiver', action='store',
                    help='mailaddress of the receiver, defaults to'
                    'f.carsughi@fz-juelich.de',
                    default='f.carsughi@fz-juelich.de')
parser.add_argument('-m', '--mailserver', dest='mailserver', action='store',
                    help='name of the mail server, defaults to smtp.frm2.tum.de',
                    default='smtp.frm2.tum.de')
parser.add_argument('instrument', nargs=1, action='store', default='DEMO',
                    help='name of the instrument')
parser.add_argument('sender', nargs=1, action='store',
                    help='mail address of the sender')

args = parser.parse_args()

# Set up logging for the GUI instance.
initLoggers()
log = NicosLogger('gui')
log.parent = None
log.setLevel(logging.INFO)
log.addHandler(ColoredConsoleHandler())


# set up logging for unhandled exceptions in Qt callbacks
def log_unhandled(*exc_info):
    import traceback
    traceback.print_exception(*exc_info)
    log.exception('unhandled exception in QT callback', exc_info=exc_info)

sys.excepthook = log_unhandled

app = QApplication(sys.argv)
widget = QMainWindow()

dt = DownTimeTool(widget, None, receiver=args.receiver,
                  mailserver=args.mailserver, sender=args.sender[0],
                  instrument=args.instrument[0], log=log)
dt.show()

sys.exit(app.exec_())
