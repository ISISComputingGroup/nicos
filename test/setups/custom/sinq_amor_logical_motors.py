description = 'Various devices for logical motors in AMOR'

includes = ['sinq_amor_movable']

devices = dict(
    dchopper = device('nicos_sinq.amor.devices.component_handler.ComponentHandler',
        description = 'Distance of chopper from the laser'
    ),
    dfilter = device('nicos_sinq.amor.devices.component_handler.ComponentHandler',
        description = 'Distance of filter from the laser',
    ),
    dpolarizer = device('nicos_sinq.amor.devices.component_handler.ComponentHandler',
        description = 'Distance of monochromator from the laser',
        mirrorheight = -88.0
    ),
    dslit1 = device('nicos_sinq.amor.devices.component_handler.ComponentHandler',
        description = 'Distance of slit 1 from the laser',
    ),
    dslit2 = device('nicos_sinq.amor.devices.component_handler.ComponentHandler',
        description = 'Distance of slit2 from the laser',
        mirrorheight = -73.0
    ),
    dslit3 = device('nicos_sinq.amor.devices.component_handler.ComponentHandler',
        description = 'Distance of slit3 from the laser',
        mirrorheight = -63.0
    ),
    dslit4 = device('nicos_sinq.amor.devices.component_handler.ComponentHandler',
        description = 'Distance of slit4 from the laser',
        mirrorheight = -34.0
    ),
    dslits = device('nicos_sinq.amor.devices.component_handler.ComponentHandler',
        description = 'Distance of slit s from the laser',
    ),
    dsample = device('nicos_sinq.amor.devices.component_handler.ComponentHandler',
        description = 'Distance of sample from the laser',
        mirrorheight = -52.0
    ),
    danalyzer = device('nicos_sinq.amor.devices.component_handler.ComponentHandler',
        description = 'Distance of analyzer from the laser',
        mirrorheight = -24.0
    ),
    ddetector = device('nicos_sinq.amor.devices.component_handler.ComponentHandler',
        description = 'Distance of detector from the laser',
        mirrorheight = 0.0
    ),
    controller = device('nicos_sinq.amor.devices.logical_motor.AmorLogicalMotorHandler',
        description = 'Logical Motors Controller',
        soz = 'soz',
        com = 'com',
        cox = 'cox',
        coz = 'coz',
        d1b = 'd1b',
        d2b = 'd2b',
        d3b = 'd3b',
        d4b = 'd4b',
        dbs = 'dbs',
        aoz = 'aoz',
        aom = 'aom',
        d1t = 'd1t',
        d2t = 'd2t',
        d3t = 'd3t',
        d4t = 'd4t',
        sample = 'dsample',
        polarizer = 'dpolarizer',
        slit1 = 'dslit1',
        slit2 = 'dslit2',
        slit3 = 'dslit3',
        slit4 = 'dslit4',
        slits = 'dslits',
        analyzer = 'danalyzer',
        detector = 'ddetector',
        lowlevel = True,
        loglevel = 'debug'
    ),
    m2t = device('nicos_sinq.amor.devices.logical_motor.AmorLogicalMotor',
        description = 'Logical motor monochromator two theta',
        motortype = 'm2t',
        controller = 'controller',
    ),
    s2t = device('nicos_sinq.amor.devices.logical_motor.AmorLogicalMotor',
        description = 'Logical motor sample two theta',
        motortype = 's2t',
        controller = 'controller',
    ),
    ath = device('nicos_sinq.amor.devices.logical_motor.AmorLogicalMotor',
        description = 'Logical Motor analyser theta',
        motortype = 'ath',
        controller = 'controller',
        loglevel = 'debug'
    ),
)
