#!/usr/bin/env python

# This is copied to NICOS_TEST_ROOT/bin/nicos-simulate when the tests run.
# It is adapted from bin/nicos-simulate to run correctly in the test
# environment.

from __future__ import absolute_import, division, print_function

import sys
from test.utils import runtime_root, selfDestructAfter

from nicos import config
from nicos.core.sessions.simulation import SimulationSession
from nicos.utils import which

try:
    import coverage
except ImportError:
    pass
else:
    # Note: This will only fire up coverage if the COVERAGE_PROCESS_START env
    # variable is set
    coverage.process_startup()



class TestSimulationSession(SimulationSession):

    def begin_setup(self):
        # do not set log handler to ERROR level, but do generate these:
        from nicos.utils.stubs import generate_stubs
        generate_stubs()

    def simulationSync(self, db=None):
        # no cache available, we have to start with default values
        pass


args = sys.argv[1:]
if len(args) < 5:
    raise SystemExit('Usage: nicos-simulate sock setups user code uuid')
sock = args[0]
uuid = args[1]
setups = args[2].split(',')
user = args[3]
code = args[4]

if len(args) > 5:
    setup_subdirs = args[5]
else:
    setup_subdirs = '../test'

config.apply()
config.nicos_root = runtime_root
config.setup_subdirs = setup_subdirs

# enable this if the helper is installed
config.sandbox_simulation = bool(which('nicos-sandbox-helper'))

selfDestructAfter(30)
TestSimulationSession.run(sock, uuid, setups, user, code)
