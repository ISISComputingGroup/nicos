#!/usr/bin/env python

import sys, os
from os import path
thisfile = path.abspath(__file__)
while path.islink(thisfile):
    thisfile = path.join(path.dirname(thisfile), os.readlink(thisfile))
sys.path.insert(0, path.normpath(path.dirname(thisfile) + '/../lib'))

import optparse
from nicos import nicos_version
from nicos.sessions import InteractiveSession

try:
    sepindex = sys.argv.index('--')
except ValueError:
    ipyargs = []
else:
    ipyargs = sys.argv[sepindex+1:]
    del sys.argv[sepindex:]

parser = optparse.OptionParser()
parser.add_option('-s', '--simulate', dest='simulate', action='store_true',
                  help='start in simulation mode')
opts, args = parser.parse_args()

import IPython

class IPySession(InteractiveSession):
    def __init__(self, appname):
        InteractiveSession.__init__(self, appname)
        # IPython doesn't accept dict subclasses as namespaces
        self._namespace = dict()
        self._local_namespace = dict()

    def console(self):
        banner = ('NICOS IPython console ready (version %s).\nTry help() for a '
                  'list of commands, or help(command) for help on a command.'
                  % nicos_version)
        help = self._namespace['help']   # save our help() command
        embedshell = IPython.Shell.IPShellEmbed(banner=banner, argv=ipyargs,
                                                user_ns=self.getNamespace())
        self._namespace['help'] = help
        embedshell()

IPySession.run(args[0] if args else 'startup', opts.simulate)
