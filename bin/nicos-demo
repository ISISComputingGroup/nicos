#!/bin/sh
SCRIPTDIR=`dirname "$(readlink -f "$0")"`
# this a rather simple solution,but should work in most cases.
# see http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
# for more details

MAKE=${MAKE:-"make"}
PYTHON=${PYTHON:-"python"}
CONSOLE=0
NOCLIENT=0
MONI=1
ELOG=1
WATCHDOG=1
DAEMON=1
GUICONFIG=""
GUIUSER="guest:guest@localhost"

if [ -z "$INSTRUMENT" ]; then
    INSTRUMENT=demo
fi
export INSTRUMENT

help() {
    echo "Usage: $0 [options]"
    echo "  options:"
    echo "     -h            display this help"
    echo
    echo "     -D            disable daemon"
    echo "     -E            disable electronic logbook"
    echo "     -W            disable watchdog"
    echo "     -M            do not start status monitor"
    echo "     -m monitor    use the 'monitor' setup instead of the default monitor setup"
    echo "     -N            do not start any client"
    echo "     -T            use nicos text client instead of gui"
    echo "     -t            use nicos standalone console instead of daemon and gui"
    echo "     -c file       use 'file' instead of the default GUI config file"
    echo "     -u user       use the 'user' for the gui login"
    exit 1
}

while getopts DEWtTNMc:u:m:h name; do
    case "$name" in
        t)
          CONSOLE=1;;
        T)
          TEXTCLIENT=1;;
        N)
          NOCLIENT=1;;
        M)
          MONI=0;;
        c)
          GUICONFIG="-c $OPTARG";;
        u)
          GUIUSER="$OPTARG";;
        m)
          MONITOR="-S monitor-$OPTARG";;
        E)
          ELOG=0;;
        W)
          WATCHDOG=0;;
        D)
          DAEMON=0;;
        h)
          help;;
        -)
          break;;
    esac
done
shift $(($OPTIND - 1))


echo -n 'Starting NICOS demo system, please wait: '
$PYTHON $SCRIPTDIR/nicos-cache >/dev/null &
CACHEPID=$!
echo -n 'cache '
sleep 2

if [ "$WATCHDOG" = "1" ] ; then
    $PYTHON $SCRIPTDIR/nicos-watchdog >/dev/null &
    WATCHDOGPID=$!
    echo -n 'watchdog '
    sleep 0.1
fi

if [ "$ELOG" = "1" ] ; then
    $PYTHON $SCRIPTDIR/nicos-elog >/dev/null &
    ELOGPID=$!
    echo -n 'elog '
    sleep 0.1
fi

$PYTHON $SCRIPTDIR/nicos-poller >/dev/null &
POLLERPID=$!
echo -n 'poller '
sleep 0.1

if [ "$MONI" = "1" ]; then
    if [ "$DAEMON" = "1" ]; then
        $PYTHON $SCRIPTDIR/nicos-monitor $MONITOR >/dev/null &
        MONIPID=$!
        echo -n 'monitor '
        sleep 0.1
    else
        $PYTHON $SCRIPTDIR/nicos-monitor $MONITOR >/dev/null
        MONIPID=$!
    fi
fi

if [ "$CONSOLE" = "1" ]; then
    echo
    echo 'Services started, starting console.'
    $PYTHON $SCRIPTDIR/nicos-aio
elif [ "$DAEMON" = "1" ]; then
    $PYTHON $SCRIPTDIR/nicos-daemon >/dev/null &
    DAEMONPID=$!
    echo -n 'daemon'
    sleep 1
    echo '.'
    if [ "$NOCLIENT" = "0" ]; then
        if [ "$TEXTCLIENT" = "1" ]; then
            $PYTHON $SCRIPTDIR/nicos-client $GUIUSER
        else
            echo 'Services started, starting GUI.'
            $PYTHON $SCRIPTDIR/nicos-gui $GUICONFIG $GUIUSER '' "$@"
        fi
    else
        echo 'Services started, press Enter to stop them.'
        read dummy
    fi
fi
if [ ! -z "$MONIPID" ]; then kill -INT $MONIPID 2>/dev/null; fi
if [ ! -z "$DAEMONPID" ]; then kill $DAEMONPID; fi
sleep 0.5
kill $POLLERPID
if [ ! -z "$ELOGPID" ]; then kill $ELOGPID; fi
if [ ! -z "$WATCHDOGPID" ]; then kill $WATCHDOGPID; fi
kill $CACHEPID
echo 'NICOS demo finished.'
