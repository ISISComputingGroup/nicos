description = 'Virtual REFSANS basic setup'

group = 'basic'

includes = [
    'vacuum',
    'shutter',
    'shutter_gamma',
    # 'guidehall',
    'reactor',
    # 'fak40',
    # 'chopper',
    # 'instrument_mode',
    # 'optic_elements',
    # 'poti_ref',
    # 'nl2b',
    # 'pumpstand',
    # 'memograph',
    'sample',
    'det_pos',
]

startupcode = """
# set offsets of the blades ...
# for d in [zb1, zb2, ... ]:
#    d.mask = 'slit'
"""

devices = dict(
    nok2 = device('nicos_mlz.refsans.devices.nok_support.DoubleMotorNOK',
        description = 'NOK2',
        nok_start = 334.0,
        nok_length = 300.0,
        nok_end = 634.0,
        nok_gap = 1.0,
        inclinationlimits = (-10, 10),
        motor_r = device('nicos.devices.generic.Axis',
            motor = device('nicos.devices.generic.VirtualMotor',
                unit = 'mm',
                abslimits = (-25., 25.),
            ),
            precision = 0.05,
        ),
        motor_s = device('nicos.devices.generic.Axis',
            motor = device('nicos.devices.generic.VirtualMotor',
                unit = 'mm',
                abslimits = (-25., 25.),
            ),
            precision = 0.05,
        ),
        nok_motor = [408.5, 585.0],
        backlash = -2,
        precision = 0.05,
        masks = {
            'ng': 0.,
            'rc': 0.,
            'vc': 0.,
            'fc': 0.,
        },
    ),
    obs = device('nicos_mlz.refsans.devices.nok_support.NOKPosition',
        reference = device('nicos.devices.generic.VirtualCoder',
            motor = device('nicos.devices.generic.VirtualMotor',
                abslimits = (0, 10),
                unit = 'V',
                curvalue = 10.,
            ),
            unit = 'V',
        ),
        measure = device('nicos.devices.generic.VirtualCoder',
            motor = device('nicos.devices.generic.VirtualMotor',
                abslimits = (0, 10),
                unit = 'V',
                curvalue = 5.,
            ),
            unit = 'V',
        ),
        # off, mul * 1000 / sensitivity, higher orders...
        poly = [9., 900.],
        serial = 6510,
        length = 250.0,
        lowlevel = True,
    ),
    zb1 = device('nicos_mlz.refsans.devices.slits.SingleSlit',
        description = 'zb1, singleslit at nok5b before nok6',
        motor = device('nicos.devices.generic.VirtualMotor',
            abslimits = (-184, 0.0),
            userlimits = (-184, 0.0),
            unit = 'mm',
            speed = 0.,
        ),
        nok_start = 5856.5,
        nok_length = 13,
        nok_end = 5862.5,
        nok_gap = 1,
        masks = {
            'slit': 0,
            'point': 0,
            'gisans': -100,
        },
        unit = 'mm',
    ),
    zb3r = device('nicos_mlz.refsans.devices.slits.SingleSlit',
        description = 'ZB3 slit, reactor side',
        motor = device('nicos.devices.generic.Axis',
            motor = device('nicos.devices.generic.VirtualMotor',
                abslimits = (-677.125, 99.125),
                userlimits = (-221.0, 95.0),
                unit = 'mm',
            ),
            precision = 0.5,
            unit = 'mm',
        ),
        nok_start = 8837.5,
        nok_length = 13.0,
        nok_end = 8850.5,
        nok_gap = 1.0,
        masks = {
            'slit': -0,
            'point': -0,
            'gisans': -110,
        },
        unit = 'mm',
    ),
    zb3s = device('nicos_mlz.refsans.devices.slits.SingleSlit',
        description = 'ZB3 slit, sample side',
        motor = device('nicos.devices.generic.Axis',
            motor = device('nicos.devices.generic.VirtualMotor',
                abslimits = (-150.8125, 113.5625),
                userlimits = (-150.0, 113.562),
                unit = 'mm',
            ),
            precision = 0.5,
            unit = 'mm',
        ),
        nok_start = 8837.5,
        nok_length = 13.0,
        nok_end = 8850.5,
        nok_gap = 1.0,
        masks = {
            'slit': -0,
            'point': -0,
            'gisans': -110,
        },
        unit = 'mm',
    ),
    zb3 = device('nicos_mlz.refsans.devices.slits.DoubleSlit',
        description = 'ZB3 slit',
        slit_r = 'zb3r',
        slit_s = 'zb3s',
        unit = 'mm x mm',
    ),
    zb0 = device('nicos_mlz.refsans.devices.nok_support.SingleMotorNOK',
        description = 'zb0, singleslit at nok5a before nok5b',
        motor = device('nicos.devices.generic.VirtualMotor',
            abslimits = (-180.815, 69.185),
            speed = 5,
            unit = 'mm',
        ),
        obs = [],
        nok_start = 4121.5,
        nok_length = 13.0,
        nok_end = 4134.5,
        nok_gap = 1.0,
        masks = dict(
            k1 = [-110.0, 0.0],
            slit = [0.0, 0.0],
        ),
        nok_motor = 4128.5,
        backlash = -2,
        precision = 0.05,
    ),
    table = device('nicos.devices.generic.Axis',
        description = 'detector table inside tube',
        motor = device('nicos.devices.generic.VirtualMotor',
            abslimits = (620, 11025),
            unit = 'mm',
        ),
        precision = 0.05,
    ),
    tube = device('nicos.devices.generic.VirtualMotor',
        description = 'tube Motor',
        abslimits = (-120, 1000),
        unit = 'mm',
    ),
    h2_width = device('nicos.devices.generic.VirtualMotor',
        description = 'Horizontal slit system: opening of the slit',
        unit = 'mm',
        abslimits = (-69.5, 69.5),
    ),
    h2_center = device('nicos.devices.generic.VirtualMotor',
        description = 'Horizontal slit system: offset of the slit-center to the beam',
        unit = 'mm',
        abslimits = (0.05, 69.5),
    ),
    top_phi = device('nicos.devices.generic.VirtualMotor',
        description = 'Top Phi axis motor',
        abslimits = (-10.5, 10.5),
        unit = 'deg',
    ),
    chopper = device('nicos.devices.generic.ManualMove',
        description = 'Interface',
        abslimits = (0, 6000),
        fmtstr = '%d',
        unit = 'rpm',
    ),
    chopper_mode = device('nicos.devices.generic.ManualSwitch',
        description = 'Modus Disc2_ pos, normal or virtual_disc2_pos_6',
        states = ['normal_mode', 'virtual_disc2_pos_6'],
    ),
)
