Changelog for NICOS 2
=====================

Release 2.9.0
-------------

* Version requirements

  - NICOS now requires Python 2.7.

* General behavior

  - Better alias handling: alias preferences are now expressed in setups with
    a new value "alias_config", instead of unconditionally setting aliases
    from startup code.

  - The "instrument" and other special devices are now (attempted to be) created
    when accessed, not only once at setup loading time.

* GUI

  - Present a choice of aliases in the "load setups" panel.

  - Can now turn off display of watchdog warnings in the status monitor setup.

* Other

  - Added some demo devices for presentations.


Release 2.8.0
-------------

* Commands

  - A "contscan()" can now be stopped without emergency stop while executing.

  - "hklplot()" can now plot multiple "extra points".

* Devices

  - Much more support for Tango devices following the MLZ standard interfaces.

  - Less cryptic Tango error messages.

* GUI

  - The GR plot windows now handling auto scaling much better: scaling can be
    activated separately for X and Y, and the automatically selected plot area
    includes some padding at the edges.

  - The GR plot windows now automatically select a useful X tick distance for
    time series plots.

  - The GR plot window can now copy fit values to the clipboard from a right-
    mouse button context menu.

  - The live view window now supports TIFF files.

  - Added a "shutdown device" entry for the context menu in the device list.

  - The script editor now shows line numbers.

  - Custom commandlets for the script editor are now supported.

* Status monitor

  - The status monitor (GUI and HTML) can now display (and update) images.

  - The status monitor has a more expressive syntax for selecting for which
    setups to display which blocks.

* Other

  - The command-line client can now display ASCII plots using Gnuplot.


Release 2.7.0
-------------

* Commands

  - Errors while executing script commands now don't automatically abort the
    whole script.  Instead, the next command is attempted, but an error
    notification is sent nevertheless.
    You can control this behavior and switch back with the new command
    "SetErrorAbort()".

  - Continuous scans with "contscan()" now have an additional argument to
    specify the integration time, which was always 1 second before.  The X value
    of points is now placed in the middle of the measured intervals.

  - For TAS, added "pos2hkl()".  Without arguments, works like "rp()".  When
    given angle and optionally mono/ana arguments, will calculate the Q/E
    position that these arguments represent.

* Devices

  - There is a new basic mixin "HasTimeout" for devices that should complete
    movement within a specified time.

  - Similarly, for devices that should reach their setpoint within precision for
    a specified time window, there is a new mixin "HasWindowTimeout".

  - The "tolerance" parameter used for some temperature controllers is now
    called "precision", as it expresses the same concept.  "HasPrecision" is now
    always used to provide this parameter.

  - Devices now check for reaching the target position after movement is
    complete.  If the target has not been reached, a warning is emitted for
    normal devices.  For devices with timeout, this also contributes to the
    "movement complete within timeout" condition.

  - A new mixin has been created for communicating devices.  All these devices
    now have a "comtries" and a "comdelay" parameter, which can be used to
    control retries and the sleep time inbetween retries.

  - The "wait()" method is now not a fundamental operation for Moveables
    anymore.  Instead, the method "isCompleted()" has been added, and the
    device-specific concrete method "doIsCompleted()" should be implemented by
    devices.  As with "doWait()" before, writing a "doIsCompleted()" method is
    only necessary if the status information (waiting for non-BUSY status) is
    not sufficient to express completion of movement.

  - Added a new "WARN" device state that should be used to express that the
    device is ok, but there are potential problems the user should be aware of.
    Device values outside the limits defined by the "warnlimits" parameter now
    set the device state to WARN.  Also, moveable devices with values outside
    their userlimits use the WARN state.

* Device classes

  - The Slit class has a new opmode "4blades_opposite", for when the user wants
    to control each blade individually, with mirrored coordinate systems for
    opposing blades.

  - The "GraceSink" for liveplotting with the external Grace program has been
    removed.

  - Some device classes have been renamed to remove redundancies in the module
    and class names.

  - Added a "ReadonlyParamDevice" that returns the value of a device parameter
    on read(), similar to the existing moveable "ParamDevice".

  - Added a common class for FPGA counter cards from FZ JÃ¼lich.

* GUI

  - On switching to a new user experiment, the GUI windows now clear information
    still stored/displayed from the old experiment.

  - Errors and warnings that result from an action in a GUI window (for example
    the device control window) should now be shown in a dialog box.

  - The X axis to use for the plot can now be selected in the scans window.

  - Data can now be normalized to any time or monitor column in the scans
    window.

  - Advanced dataset manipulation (adding, subtracting and dividing datasets)
    now has more sane behavior with respect to normalization and errorbars.

  - Fit results are now shown with errors for the fit parameters.

  - Non-user parameters are shown in the "Devices" panel when expert mode is
    active.

  - The setup dialog now doesn't show plug-and-play setups (for sample
    environment boxes) by default, and there is an option to show them.

  - Added a tool dialog to easily report NICOS bugs to the issue tracker.

* Services

  - The watchdog now can be given preconditions for each warning condition.  To
    emit such a warning, the precondition must be fulfilled for a specified
    time.

  - The init script now checks extensively for existing NICOS processes that
    should not be running, and notifies the user about potential problems.

* Tools

  - A "cache inspector" tool has been added, to inspect the live state of a
    cache database.


Release 2.6.0
-------------

* Commands

  - "appendscan()" can now be used multiple times to append to the original scan
    further and further.

  - The deprecated "DestroyDevice()" has been removed (use "RemoveDevice").

  - The deprecated "Run", "Simulate" and "Notify" commands have been removed
    (use "run", "sim" and "notify").

  - "CreateAllDevices()" now has a flag that allows all lowlevel devices to be
    exported into the NICOS namespace.

  - Common tomography commands for imaging instruments.

* Device classes

  - Devices can now add custom range information to the "device ranges" reported
    after simulation by defining a "_sim_getMinMax" method.

  - MesyDAQ MSTD-16 acquisition hardware is now supported.

  - TACO devices now have more control over mapping the TACO status value to
    NICOS status values without overriding "doStatus()".

  - Added "NamedDigitalInput/Output" and "PartialDigitalInput/Output" to the
    TANGO classes.

  - The "DeviceAlias" has been moved to the "nicos.core" namespace.

  - Devices now support a doPrepare step in scans that is executed before starting
    all devices for a scan point.

* GUI

  - Lowlevel devices are shown in the "Devices" panel when expert mode is
    active.

  - Added a "downtime report" tool to send reports directly to the User Office.

  - History and trend plots can now show subitems of values that are sequences,
    such as "det[0]" for the first channel value of a multi-channel detector.

  - Monitor display widgets can now use a "light background" color scheme.

  - Rename TrendPlot "plotinterval" to "plotwindow" to be consistent between
    history plot and trend plot

  - Daemon: be paranoid about running as root.


* Services

  - When requesting to stop a running script, scripts put into the queue *after*
    the stop command will now be executed after the original script stops.

  - Added a daemon authenticator for LDAP.

  - The init script "nicos-system" is now more careful about really stopping
    services and complaining if they can't be stopped.

  - Watchdog: allow multiple values/devices in conditions.


Release 2.5.0
-------------

* Commands

  - NewExperiment() now warns if the proposal comes from the proposal database
    and has no approval from the radioprotection or safety departments.

  - Added the "setalign()" command for triple-axis mode as an easier alternative
    to manipulating "Sample.psi0" by hand.

  - Added the "activation()" command to query sample activation from the NICOS
    command line using the new FRM-II web-based activation calculator.

  - Removed several unused or now obsolete commands: "Remember()", "LogAttach()",
    "Edit()".

  - Added "RemoveDevice()" command as the new preferred way of spelling
    "DestroyDevice()".  The old name will still be available for one version.

  - The "twodscan()" command was changed to run a series of normal 1-dimensional
    scans, so that its result can be plotted and analyzed more easily.

* Device classes

  - A new interface for >= 2-D image data has been implemented in the module
    "nicos.core.image".  It consists of a base class for detectors,
    "ImageProducer", and a base class for image sinks, "ImageSink".  Each
    ImageProducer can have multiple sinks as attached devices.  The image sinks
    are automatically provided with the detector image data and header
    information for use in their data files.

  - Created new HasMapping mixin class for mapped devices, implemented abstract
    MappedReadable and MappedMoveable device skeletons using _readRaw and
    _startRaw methods as counterparts to doRead and doStart, but working with
    mapped (RAW) values.

  - Switcher classes got support for a fallback parameter whose value is
    returned if none of the mapping entries matches.

  - Create a LockedDevice mixin which is used for devices needing a special
    lock/unlock precedure using another device.

  - Added default implementations for "doWait", "doReset", "doStatus" and
    "doStop" that propagate the action to attached devices.

  - TACO temperature controllers can now set the maximum heater power via a
    NICOS parameter.

  - QMesyDAQ detectors are now supported.

  - Astrium selectors are now supported.

  - New VirtualTemperature implementation with more realistic heat flow and PID
    control.

* Other changes

  - Simulation mode: the simulation is now executed in a fresh subprocess, not
    by fork()ing the current NICOS process.  Output from simulation is now saved
    in a log file.  As a consequence, the simulation code cannot use objects in
    the namespace of the running process; they have to be re-created in the
    simulated script.

  - The Experiment device was rewritten to avoid storing copies of the datapath
    in other devices, which might use a stale version under certain
    circumstances.

  - File counters have been made consistent -- there is always just one global
    counter for scan files and image files -- and are now handled by the
    Experiment device.

  - If sending data via email is configured and the attachment gets too big, it
    will be uploaded to a temporary location to be downloaded by the user.

  - The file modes and owners to set on current/old experiment data files can
    now be finely tuned (Experiment.managerights parameter).

* GUI

  - The "experiment setup" panel now allows to finish the experiment with a
    button.

  - The "experiment info" panel now has "..." buttons that directly lead to the
    respective dialogs where the shown item can be changed.

  - The "devices" side panel has been improved: the dialog opened by clicking
    single devices now has more features, such as a graphical way for setting
    limits and referencing devices, and for setting new alias targets.

  - The "setup" panel can now include instrument-specific tabs, like fields to
    enter names of all samples inside a sample changer.

  - The data of a curve displayed in the "Device history" panel can now be saved
    to disk as a plain-text file.

  - When using the "update script" command, the GUI now asks for a reason and
    saves this reason in the experiment log.

* Services

  - The watchdog daemon now can have a unlimited of different condition "types",
    each of which has a separate list of notifiers.

* Documentation

  - TANGO bindings are now documented.

  - Instrument specific setups and some classes are now documented.

* Code modernized for upcoming Python 3 compatibility.

Release 2.4.0
-------------

- An experimental report template can now be automatically filled and placed
  in the experiment directory for user convenience.

- TAS: spurion calculations and warnings are now performed in simulation mode,
  use the "tasdevice.spurioncheck" parameter to control this behavior.

- The "appendscan()" command now appends to the actual end of the scan, not
  the theoretical end (which differs if the scan was interrupted).

- Support for reading values from "Memograph" generated web sites.

- GUI: the elog panel should now allow opening attached files with their default
  viewer (like PDF files).

- GUI: the elog panel now has a print functionality.

- Moveable devices now have a default "doWait()" method that checks for
  the status becoming OK.

- GUI: added a panel to view NICOS log files (if available on the client
  machine).

Release 2.3.0
-------------

- NICOS now requires Python 2.6.

- Added a combined interactive command-input and commandline GUI panel.

- The GUI client now writes a logfile so that unhandled exceptions can be
  better diagnosed.

- Added a MultiSwitcher class to move multiple devices together to pre-
  defined positions.

- Added the "nicos-collector" service that can be used to submit information
  from multiple caches to a "supercache".

- Removed the "SetSMSReceivers" command.

Release 2.2.0
-------------

- Updated documentation describing all NICOS services with configuration
  examples.

- Setups now have more control over which commands are available to the user
  because the standard commands are not automatically loaded anymore.  The
  previous set of standard commands can be loaded via the module
  "nicos.commands.standard".

- Added a "forecast" device that estimates the final number of counts when the
  preset is reached for a counting with a single detector.

- The count loop can now be paused while counting (if the detector supports
  this) by the user or by conditions detected by the watchdog.

- Added "warnlimits" to readable devices, a property that sets a range of
  values outside of which the device value is shown as "out of range" e.g. in
  the status monitor.

- Added a tool to statically check setup files for errors while installing
  NICOS.

- GUI: multiple connection presets are now supported.

- Added pluggable authentication for the NICOS daemon and a backend that
  authenticates against proposal system users.

- Now the user may only release a fixed device if the access level matches or
  exceeds the level of the user who fixed the device.

- GUI: added interactive command input panel.

- GUI: added "device overview/status" panel with a list of all existing
  devices and their values.

- NICOS services and GUI client now run on Windows.

- Added pseudo-devices to read/control the incoming/outgoing energy for
  triple-axis instruments.

- Added readout of the heater power to TACO temperature controllers.

- Added a "requires" parameter to all moveable devices that specifies access
  restrictions for move actions.

- GUI: added ability to create tabbed panel windows and to detach tabs from
  the main window.

- Added a "watchdog" service that reacts to cache events and can send
  notifications or execute actions if an exceptional condition is detected.

- Added a handler for cache events generated by sample environments, so that
  NICOS can automatically suggest loading a particular setup.

- GUI: added a feature to quickly modify data in the liveplot.

- Added the "reference()" command.

- Added a virtual counter implementation for TAS that uses a Monte Carlo
  resolution calculation to simulate intensities for given scattering law
  models.

- Added Eulerian cradle implementation for TAS.

- Added the "info()" command.

- Added a new input mode called "simple parameter mode".  In this mode,
  commands and arguments can be entered without parentheses and
  commas.  Control structures are not supported.  It is toggled with
  the "SetSPM" command.

- Setup files can now also placed in subdirectories of the setup path.
  Entries in parent directories override entries in subdirectories
  when two files have the same name.

- Restructured the "nicos" Python package layout.  Custom libraries
  will have to be adapted.

- Added common FRM-II sample environment and reactor setups.  They are
  installed by default for FRM-II instruments.

- Added "sweep" scan command.

- The Qt and HTML status monitors can now plot values versus time.

- Added back text-based client for the daemon.

- Changed cache store file format to retain info if the key will expire.
  This fixes cache startup behavior even after unclean shutdowns.

- Added "checkalign" command for TAS instruments.

- Added HTML version of NICOS monitor.

- Added basic mathematical functions and constants in the default namespace.

- Added "resplot" and "hklplot" commands for TAS instruments, which are
  interactive resolution calculation and reciprocal space map helpers.

- Added "alpha" attached-device to triple-axis instrument that is moved
  to the angle between ki and Q whenever the TAS is moved.

- Changed "users" parameter of the experiment device to a simple string,
  and it is now possible to add users directly in "NewExperiment()".

- Added "maxage" parameter to "doRead()" and "doStatus()" methods,
  which can be given to subdevices.

- Added basic TANGO devices.

- Added a "DeviceAlias" object that can be used to refer with one name
  to different actual devices.

- Added graphical help system to the GUI client.  Improved quality of
  docstrings of most commands.

- Added a "mode" parameter to "doInit()" and "doPreinit()" so that
  device implementers remember to check for simulation mode.

- Added an API "Measurable.presetInfo()" that returns the accepted preset
  keys; to check that given presets are actually used by the detector(s).

- Added a new standalone history viewer that plots cache data.

- Improved the message display in the web interface.

- Improved the ELog HTML styling.

- Added a "debug" keyword-only argument to "Simulate()" that prints a
  traceback on exception.

- Added "obsreadings" parameter to generic axis to use instead of the
  hardcoded 100 times when asking observers for the current value.

- Added "history()" method to Grace liveplot.

- History-related commands and methods now accept strings as start and
  end times, e.g. "2012-03-26 12:15".

- Added a "logging_path" setting to nicos.conf.

- Renamed "server" parameter of CacheClient to "cache".

- Added "findpeaks()" analyzing command.

- Changed module structure of the "nicos" Python package to be more logical.

Release 2.1.2
-------------

- Fixed not being able to run another manualscan after stopping a
  manualscan.

- Fixed error in "history()" when calling with actual timestamps.

- Fixed glitches in cache handling of expired values when restarting
  the cache server.

- The cache now re-loads database keys from disk even if not restarted
  on the same day.

- Fixed problem with cache history query not returning all requested
  values.

- Fixed simulation mode not working with no cache configured.

Release 2.1.1 (2012-03-22)
--------------------------

- Fixed an elog bug that caused elog to quit on Unicode errors.

- Fixed calling "gauss()" and "poly()" with column names.

- Report simulated runtime for code run with "Simulate()".

- Fixed namespaces used in "Run()", so that globals can be accessed from
  functions defined in user scripts.

- Fixed simulating and timing devices with a ramp parameter.

- Made the cache robust against corrupted save files on disk.

- Fixed the "create_nicosconf" script when no TACO environment is found.

- Fixed a bug in simulation mode that would cause exceptions when
  wait()ing for fixed devices.

Release 2.1.0 (2012-03-14)
--------------------------

- Introduced the "Measurable.duringMeasureHook()" and
  "Measurable.save()/doSave()" methods.

- Added "Experiment.scripts" parameter that stores the code of the
  currently executed script.

- Added easy access control using the "requires()" decorator.  Added
  "AccessError" and "Session.checkAccess()" APIs.

- Added the three-parameter form of "adjust()" that allows to adjust to
  some other than the current position.

- Added automatic retry of Taco calls with the new "tacotries" parameter
  of TacoDevice objects.

- Added the "extended" entry to setup files, for future use.

- The "waitForStatus()" utility function now supports timeout and handling
  error states.

- The "center()" and "checkoffset()" user commands now can take an "ycol"
  keyword that determines which data column is used for fitting.

- Added "calpos()", "pos()" and "rp()" commands for triple-axis
  spectrometers.

- Renamed the "name" setup entry to "description" to match its function.

- Taco motors now can read the absolute limits from the Taco device.

- Removed "setPosition()" from abstract Axis.  Moved "setPosition()" from
  abstract Motor to abstract Coder.

- Changed the "FRMDetector" class to have lists of monitor and counter
  channels as adevs.  Presets are either "t" or "monX" or "ctrX", where
  X is the number of the monitor/counter channel.

- Added suggestion of possible commands when misspelled on the console.

- The TAS commands are not included automatically in setups anymore.

- Added "coordinates" parameter to slits to select the coordinate
  convention for right/left, bottom/top axes.

- Removed first ("converter") argument from parameter type "oneof".

- Added a "FinishExperiment()" user command.

- Added "poll" and "neverpoll" parameters to the Poller object.

- When calling "stop()" without devices, stop all devices in parallel.

- Added "localcontact" parameter for experiment.

- The "pollinterval" parameter of readables can now be None, to disable
  polling.

- The Axis class now has a "jitter" parameter that can account for
  jitter in the movement, e.g. due to airpads.

- Added a "RemoveSetup" command that re-loads everything except for the
  given setups.

- Creating the standard detectors/envlist is now retried every time the
  attribute is accessed from the experiment.

- With option "-c", the NICOS console does not autocreate devices.

- Add "dataroot" parameter for experiment device, which configures actual
  data root path.

- When parameters in configuration are changed, they are now preferred on
  reload to the cached values.

- Temperature controller now respects ramping time for timeout, and allows
  to choose not to raise on timing out.

- Added TAS commands to calculate powder rays and spurion positions.

- Added new "appendscan()" command to quickly append to the last scan.

- Fixed devices now don't raise an exception on moving, but only warn that
  they will not move.

- New command: "Remember()".

- Simplified TACO temperature classes: the temperature control device does
  not have "sample" and "control" channel properties anymore.

Release 2.0.1
-------------

- In "ImageStorage", made sure the data file isn't overwritten unless
  explicitly allowed.

- Fixed the "steps" parameter of IPC coders.

- Fixed nicos.conf not being read.  Prepend PYTHONPATH entries to
  sys.path instead of appending.

- Fixed TAS wavevectors to always move in inverse angstroms.

- Fixed data file counting bug: when two sessions were writing data
  files, they could use the same counter and try to write the same file.

- The Axis now correctly resets the error state on multiple positioning
  tries.

Release 2.0.0 (2012-01-11)
--------------------------

- Initial release.
